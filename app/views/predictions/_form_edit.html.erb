<%= simple_form_for @prediction, :html=> { class: 'form-horizontal' } do |f| %>
<div class="modal-dialog">
  <div class="modal-content">
    <div class="modal-header">
      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
      <div class="modal-title" id="myModalLabel">CHANGE PREDICTION</div>
    </div>
    <div class="modal-body">
        <div class="alert alert-danger" style="display:none">
            <p>Hold on, your prediction isn't ready yet.  You'll need to</p>
            <ul style="padding-left:30px">
            </ul>
        </div>
        <label for="prediction_resolution_date">I'll Knoda Result On...</label>
        <div class="form-group">
          <input type="text" name="prediction[resolution_date]" id="prediction_resolution_date" style="display:none;"/>
          <div class="row">
            <div class="col-xs-6">
              <input type="date" min="2014-01-01" value="2014-01-01" name="prediction_resolution_date_date"  autocomplete="false"/>
            </div>
            <div class="col-xs-6 time-picker-wrapper">
                <input name="prediction_resolution_date_time" type="time" value="12:00" step="300" autocomplete="false" />
            </div>
          </div>
        </div>
    </div>
    <div class="modal-footer">
      <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
      <%= f.button :submit , :class => 'btn btn-success' %>
    </div>
  </div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->
<% end %>            
<script>
  var updateDate = function(target,date, time) {
      m = moment(date).startOf('day')
      if (time.meridian == 'AM') {
        m.add('hours', time.hours)
      } else {
        m.add('hours', time.hours+12)
      }
      m.add('minutes', time.minutes)
      target.val(m.toISOString());
  }

  var clearValidation = function() {
    $('#edit_prediction_<%= @prediction.id%> .alert ul').empty()
    $('#edit_prediction_<%= @prediction.id%> .alert').hide()
  }
  var validateUpdatePrediction = function() {
    clearValidation()
    var resolution_date = moment($('#prediction_resolution_date').val())
    var errors = []
    if (resolution_date.isBefore(moment()))
      errors.push({ msg: 'Set a resolution date in the future.'})              
    if (errors.length == 0) {
      return true
    }else {
      $('#edit_prediction_<%= @prediction.id%> .alert').show()
      for (var i in errors) {
        $('#edit_prediction_<%= @prediction.id%> .alert ul').append("<li>" + errors[i].msg + "</li>")
      }
      return false
    }
  }

$(function() {
    oneWeekInFuture = moment().add('weeks', 1)
    $('input[name=prediction_resolution_date_date]').attr('min', oneWeekInFuture.format('YYYY-MM-DD')).val(oneWeekInFuture.format('YYYY-MM-DD'))
    $('input[name=prediction_resolution_date_time]').val(oneWeekInFuture.format('HH:mm'))  

    if (!Modernizr.inputtypes.date) {
      $('input[type="date"]').inputDate();
    }
    if (!Modernizr.inputtypes.time) {
      $('input[type="time"]').inputTime()
    }  

    $('input[name=prediction_resolution_date_time], input[name=prediction_resolution_date_date], input[name=prediction_expires_at_time], input[name=prediction_expires_at_date]').on('change', function(e) {
      pe = moment($('input[name=prediction_expires_at_date]').val() + ' ' + $('input[name=prediction_expires_at_time]').val(), "YYYY-MM-DD HH:mm")
      $('#prediction_expires_at').val(pe.toDate())
      rd = moment($('input[name=prediction_resolution_date_date]').val() + ' ' + $('input[name=prediction_resolution_date_time]').val(), "YYYY-MM-DD HH:mm")
      $('#prediction_resolution_date').val(rd.toDate())    
    })  
 $('textarea').maxlength({
    alwaysShow: true 
  }); 
  // Form Submission
  $('#edit_prediction_<%= @prediction.id%>').on('submit', function(e) {
    e.preventDefault()
    if (validateUpdatePrediction()) {
      updatePrediction(<%= @prediction.id%>, $('#edit_prediction_<%= @prediction.id%>').serialize())
    } 
  });

});
</script>